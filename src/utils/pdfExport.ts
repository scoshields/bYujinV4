import { jsPDF } from 'jspdf';
import 'jspdf-autotable';
import { formatDate } from './dateUtils';

interface ExerciseSet {
  set_number: number;
  weight_lbs: number | null;
  reps: number | null;
  completed: boolean;
}

interface WorkoutExercise {
  exercise: {
    name: string;
    target_muscle_group: string;
    primary_equipment: string;
  };
  exercise_sets: ExerciseSet[];
}

interface WorkoutData {
  name: string;
  scheduled_date: string;
  completed: boolean;
  notes?: string;
  workout_exercises: WorkoutExercise[];
}

export function exportWorkoutToPDF(workout: WorkoutData) {
  const doc = new jsPDF();
  
  // Add title and logo
  doc.setFontSize(24);
  doc.setTextColor(79, 70, 229); // Indigo color
  doc.text('Yujin Fit', 14, 20);
  
  doc.setFontSize(14);
  doc.setTextColor(0);
  doc.text('Workout Plan', 14, 30);
  
  // Add workout details
  doc.setFontSize(12);
  doc.text(`Workout: ${workout.name}`, 14, 45);
  doc.text(`Date: ${formatDate(workout.scheduled_date)}`, 14, 52);
  doc.text(`Status: ${workout.completed ? 'Completed' : 'In Progress'}`, 14, 59);
  
  if (workout.notes) {
    doc.text('Notes:', 14, 66);
    doc.setFontSize(10);
    const splitNotes = doc.splitTextToSize(workout.notes, 180);
    doc.text(splitNotes, 14, 73);
  }

  let yPos = workout.notes ? 90 : 75;

  // Add exercises
  workout.workout_exercises.forEach((exercise, index) => {
    // Check if we need a new page
    if (yPos > 250) {
      doc.addPage();
      yPos = 20;
    }

    // Exercise header
    doc.setFontSize(12);
    doc.setFont('helvetica', 'bold');
    doc.text(`${index + 1}. ${exercise.exercise.name}`, 14, yPos);
    doc.setFont('helvetica', 'normal');
    doc.setFontSize(10);
    doc.text(`Target: ${exercise.exercise.target_muscle_group}`, 14, yPos + 7);
    doc.text(`Equipment: ${exercise.exercise.primary_equipment}`, 14, yPos + 14);

    // Sets table
    const tableData = exercise.exercise_sets.map(set => [
      set.set_number.toString(),
      set.weight_lbs ? `${set.weight_lbs} lbs` : '-',
      set.reps?.toString() || '-',
      set.completed ? 'âœ“' : ''
    ]);

    doc.autoTable({
      startY: yPos + 18,
      head: [['Set', 'Weight', 'Reps', 'Done']],
      body: tableData,
      theme: 'striped',
      styles: { 
        fontSize: 10,
        cellPadding: 3
      },
      headStyles: { 
        fillColor: [79, 70, 229],
        textColor: 255,
        fontStyle: 'bold'
      },
      columnStyles: {
        0: { cellWidth: 30 },
        1: { cellWidth: 40 },
        2: { cellWidth: 30 },
        3: { cellWidth: 30 }
      }
    });

    yPos = (doc as any).lastAutoTable.finalY + 15;
  });

  // Add footer
  const pageCount = doc.getNumberOfPages();
  for (let i = 1; i <= pageCount; i++) {
    doc.setPage(i);
    doc.setFontSize(8);
    doc.setTextColor(128);
    doc.text(
      `Generated by Yujin Fit - Page ${i} of ${pageCount}`,
      doc.internal.pageSize.width / 2,
      doc.internal.pageSize.height - 10,
      { align: 'center' }
    );
  }

  // Save the PDF
  const fileName = `yujin-fit-workout-${workout.name.toLowerCase().replace(/\s+/g, '-')}-${
    formatDate(workout.scheduled_date, { dateStyle: 'short' }).replace(/\//g, '-')
  }.pdf`;
  
  doc.save(fileName);
}